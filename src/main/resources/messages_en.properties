HelpCommand.help =\n\
This is the elasticshell, a  shell for elasticsearch\n\
For information about elasticsearch, visit: http://elasticsearch.org\n\n\
\
You can either write Java or JavaScript code in here. \n\
Every command is exposed as a JavaScript function. In order to get help \n\
for a specific function, just type its name (without the brackets)! \n\n\
\
The elasticshell has nice auto-suggestions, available pressing the tab key \n\
which will show as a result the list of all available commands and objects. \n\n\
\
The following are the available commands: \n\
\    exit() or quit()                   Quits the elasticshell \n\
\    help()                             Display this help message \n\
\    importClass(java.util.Date)        Imports a Java class \n\
\    importPackage(java.util)           Imports a Java package \n\
\    nodeClient('elasticsearch')        Creates a new node client given \n\
\                                       the cluster name to connect to \n\
\    transportClient('localhost:9300')  Creates a new transport client given \n\
\                                       the address of the node to connect to \n\n\

RhinoTransportClientCommand.help=\n\
Creates a new elasticsearch transport client using the Java API \n\
(http://www.elasticsearch.org/guide/reference/java-api/client.html) \n\n\
The following command with no arguments will create a \n\
new transport client connected to localhost, port 9300: \n\
\ es = transportClient(); \n\n\
The following command with a string argument will create \n\
a new transport client connected to es-host, port 9302: \n\
\ es = transportClient('es-host:9302'); \n\n\
You can connect to multiple nodes just providing a list of addresses: \n\
\ es = transportClient('es-host1:9300','es-host2:9300','es-host3:9300'); \n\

RhinoNodeClientCommand.help=\n\
Creates a new elasticsearch node client using the Java API \n\
(http://www.elasticsearch.org/guide/reference/java-api/client.html) \n\n\
The following command with no arguments will create a new \n\
node client connected to the cluster with name elasticsearch: \n\
\ es = nodeClient(); \n\n\
The following command with a string argument will create a new \n\
node client connected to the cluster with name es-cluster: \n\
\ es = nodeClient('es-cluster'); \n\

ExitCommand.help=\n\
Quits the elasticshell\n\

AbstractClient.availableIndices=\n\
Returns a JSON object containing all the indices available within the \n\
current elasticsearch cluster, together with their aliases and types.

AbstractClient.availableNodes=\n\
Returns a JSON object containing all the nodes available within the \n\
current elasticsearch cluster.
